
    public static final int		brushHexSizes[] = {1, 7, 19, 37, 51};
    public static final int		brushX[][] = {
    {0},
    {0,    0, 1, 1, 0, -1, -1},
    {0,    0, 1, 1, 0, -1, -1,   0, 1, 2, 2, 2, 1, 0, -1, -2, -2, -2, -1},
    {0,    0, 1, 1, 0, -1, -1,   0, 1, 2, 2, 2, 1, 0, -1, -2, -2, -2, -1,    0, 1, 2, 3, 3, 3, 3, 2, 1, 0, -1, -2, -3, -3, -3, -3, -2, -1},
    {0,    0, 1, 1, 0, -1, -1,   0, 1, 2, 2, 2, 1, 0, -1, -2, -2, -2, -1,    0, 1, 2, 3, 3, 3, 3, 2, 1, 0, -1, -2, -3, -3, -3, -3, -2, -1,
        0, 1, 2, 3, 4, 4, 4, 4, 4, 3, 2, 1, 0, -1, -2, -3, -4, -4, -4, -4, -4, -3, -2, -1}};

    public static final int		brushY[][][] = {
    {{0},
    {0,    -1, 0, 1, 1, 1, 0},
    {0,    -1, 0, 1, 1, 1, 0,    -2, -1, -1, 0, 1, 2, 2, 2, 1, 0, -1, -1},
    {0,    -1, 0, 1, 1, 1, 0,    -2, -1, -1, 0, 1, 2, 2, 2, 1, 0, -1, -1,    -3, -2, -2, -1, 0, 1, 2, 2, 3, 3, 3, 2, 2, 1, 0, -1, -2, -2},
    {0,    -1, 0, 1, 1, 1, 0,    -2, -1, -1, 0, 1, 2, 2, 2, 1, 0, -1, -1,    -3, -2, -2, -1, 0, 1, 2, 2, 3, 3, 3, 2, 2, 1, 0, -1, -2, -2,
        -4, -3, -3, -2, -2, -1, 0, 1, 2, 3, 3, 4, 4, 4, 3, 3, 2, 1, 0, -1, -2, -2, -3, -3}},
    {{0},
    {0,    -1, -1, 0, 1, 0, -1},
    {0,    -1, -1, 0, 1, 0, -1,    -2, -2, -1, 0, 1, 1, 2, 1, 1, 0, -1, -2},
    {0,    -1, -1, 0, 1, 0, -1,    -2, -2, -1, 0, 1, 1, 2, 1, 1, 0, -1, -2,    -3, -3, -2, -2, -1, 0, 1, 2, 2, 3, 2, 2, 1, 0, -1, -2, -2, -3},
    {0,    -1, -1, 0, 1, 0, -1,    -2, -2, -1, 0, 1, 1, 2, 1, 1, 0, -1, -2,    -3, -3, -2, -2, -1, 0, 1, 2, 2, 3, 2, 2, 1, 0, -1, -2, -2, -3,
        -4, -2, -3, -1, -2, -1, 0, 1, 2, 2, 3, 3, 4, 3, 3, 2, 2, 1, 0, -1, -2, -3, -3, -4}}};
        
        
        
    public static final int		brushX[][] = {
    {0},
    {0,
        0, 1, 1, 0, -1, -1},
    {0,
        0, 1, 1, 0, -1, -1,
        0, 1, 2, 2, 2, 1, 0, -1, -2, -2, -2, -1},
    {0,
        0, 1, 1, 0, -1, -1,
        0, 1, 2, 2, 2, 1, 0, -1, -2, -2, -2, -1,
        0, 1, 2, 3, 3, 3, 3, 2, 1, 0, -1, -2, -3, -3, -3, -3, -2, -1},
    {0,
        0, 1, 1, 0, -1, -1,
        0, 1, 2, 2, 2, 1, 0, -1, -2, -2, -2, -1,
        0, 1, 2, 3, 3, 3, 3, 2, 1, 0, -1, -2, -3, -3, -3, -3, -2, -1,
        0, 1, 2, 3, 4, 4, 4, 4, 4, 3, 2, 1, 0, -1, -2, -3, -4, -4, -4, -4, -4, -3, -2, -1}};

    public static final int		brushY[][][] = {
    {{0},
    {0,
        -1, 0, 1, 1, 1, 0},
    {0,
        -1, 0, 1, 1, 1, 0,
        -2, -1, -1, 0, 1, 2, 2, 2, 1, 0, -1, -1},
    {0,
        -1, 0, 1, 1, 1, 0,
        -2, -1, -1, 0, 1, 2, 2, 2, 1, 0, -1, -1,
        -3, -2, -2, -1, 0, 1, 2, 2, 3, 3, 3, 2, 2, 1, 0, -1, -2, -2},
    {0,
        -1, 0, 1, 1, 1, 0,
        -2, -1, -1, 0, 1, 2, 2, 2, 1, 0, -1, -1,
        -3, -2, -2, -1, 0, 1, 2, 2, 3, 3, 3, 2, 2, 1, 0, -1, -2, -2,
        -4, -3, -3, -2, -2, -1, 0, 1, 2, 3, 3, 4, 4, 4, 3, 3, 2, 1, 0, -1, -2, -2, -3, -3}},
    {{0},
    {0,
        -1, -1, 0, 1, 0, -1},
    {0,
        -1, -1, 0, 1, 0, -1,
        -2, -2, -1, 0, 1, 1, 2, 1, 1, 0, -1, -2},
    {0,
        -1, -1, 0, 1, 0, -1,
        -2, -2, -1, 0, 1, 1, 2, 1, 1, 0, -1, -2,
        -3, -3, -2, -2, -1, 0, 1, 2, 2, 3, 2, 2, 1, 0, -1, -2, -2, -3},
    {0,
        -1, -1, 0, 1, 0, -1,
        -2, -2, -1, 0, 1, 1, 2, 1, 1, 0, -1, -2,
        -3, -3, -2, -2, -1, 0, 1, 2, 2, 3, 2, 2, 1, 0, -1, -2, -2, -3,
        -4, -2, -3, -1, -2, -1, 0, 1, 2, 2, 3, 3, 4, 3, 3, 2, 2, 1, 0, -1, -2, -3, -3, -4}}};
        

5y: -4, -3, -3, -2, -2, -1,  0,  1,  2,  3, 3, 4, 4, 4, 3, 3, 2, 1, 0, -1, -2, -2, -3, -3
6y: -5, -4, -4, -3, -3, -2, -1,  0,  1,  2, 3, 3, 4, 4, 5, 5, 5, 4, 4,  3,  3,  2,  1,  0, -1, -2, -3, -3, -4, -4
7y: -6, -5, -5, -4, -4, -3, -3, -2, -1,  0, 1, 2, 3, 4, 4, 5, 5, 6, 6,  6,  5,  5,  4,  4,  3,  2,  1,  0, -1, -2, -3, -3, -4, -4, -5, -5
8y: -7, -6, -6, -5, -5, -4, -4, -3, -2, -1, 0, 1, 2, 3, 4, 4, 5, 5, 6,  6,  7,  7,  7,  6,  6,  5,  5,  4,  4,  3,  2,  1,  0, -1, -2, -3, -4, -4, -5, -5, -6, -6


pattern? let's say that r = radius - 1

X: 0, 1, 2, 3 ... (r of r) ... 3, 2, 1, 0, -1, -2, -3 ... (r of -r) ... -3, -2, -1
Y: -r, -(r-1), -(r-1), -(r-2), -(r-2), .. until we're at (floor(r/2))-1, which is once: -(floor(r/2)), -(floor(r/2) - 1) .. 0, 1, 2, ... (floor(r/2)), (floor(r/2) + 1), (floor(r/2) + 1)... (r-2), (r-2)